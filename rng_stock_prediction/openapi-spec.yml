openapi: 3.0.0
info:
  description: |
    API for a random number generator using a quantum circuit. A random number generator is provided using a quantum circuit on
    IBMQ hardware or via a simulator with the IBM Qiskit SDK.
  version: "1.0"
  title: Random Number Generator with a Quantum Circuit
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "www.anaqor.io"

paths:
  /:
    get:
      tags:
        - Status API
      summary: Health checking endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    title: Status of the service
                    type: string
                    example: Service is up and running
    post:
      tags:
        - Service API
      summary: Method for returning random numbers generated by a quantum computer
      description: For a given number n_bits (which in turn is also the number of participating qubits), return a list of n_numbers random numbers in the range [0, 2^n_bits-1].
      operationId: uploadPayload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/input"
      responses:
        "200":
          description: Random Number has been generated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_start"
        "405":
          description: Invalid input
        "503":
          description: Timeout
  
  /{id}:
    get:
      tags:
        - Service API
      summary: Check execution status
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of a certain execution
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job_check"
        "400":
          description: Invalid input
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error
  /{id}/result:
    get:
      tags:
        - Service API
      summary: Get the result of an execution
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of a certain execution
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: service-specific result object
                  code:
                    type: string
                    description: service-specific error code representing the type of problem encountered
                  detail:
                    type: string
                    description: service-specific error message describing the detail of the problem encountered
                example:
                $ref: "#/components/schemas/output"
        "400":
          description: Invalid input
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

components:
  schemas:
    output:
      type: object
      properties:
        result:
          type: object
          properties:
            random_number_list:
              type: array
              items:
                type: integer
              default: [1, 5, 14, 12, 12, 13, 8, 13, 5, 4]
        metadata:
          type: object
          properties:
            execution_time:
              type: number
              example: 2.23
            avg_circuit_execution_time:
              type: number
              example: 2.23

    job_check:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [UNKNOWN, PENDING, RUNNING, SUCCEEDED, FAILED]
        createdAt:
          type: string
      example:
        id: 87cb778e-ac43-11ec-b909-0242ac120002
        status: SUCCEEDED
        createdAt: "2022-01-01 22:38:08"

    job_start:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [UNKNOWN, PENDING, RUNNING, SUCCEEDED, FAILED]
        createdAt:
          type: string
      example:
        id: 87cb778e-ac43-11ec-b909-0242ac120002
        status: PENDING
        createdAt: "2022-01-01 22:38:01"

    input:
      type: object
      properties:
        data:
          type: object
          properties:
            n_numbers:
              type: integer
              default: 10
        params:
          type: object
          properties:
            n_bits:
              type: integer
              default: 4
            backend:
              type: string
              default: "qasm_simulator"

  securitySchemes:
    rng_auth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "http://example.com/oauth/token"
          scopes:
            write: allows modifying resources
            read: allows reading resources
